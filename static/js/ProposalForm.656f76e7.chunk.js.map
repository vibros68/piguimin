{"version":3,"sources":["components/ProposalForm/ProposalForm.module.css","components/DatePickerField/DatePickerField.module.css","components/ModalMDGuide/ModalMDGuide.module.css","components/DatePickerField/DatePickerField.jsx","components/ModalMDGuide/ModalMDGuide.jsx","components/ProposalForm/DraftSaver.jsx","components/ProposalForm/validation.js","components/ProposalForm/helpers.js","components/ProposalForm/FormatHelpButton.jsx","components/ProposalForm/SubmitButton.jsx","components/ProposalForm/ProposalForm.jsx","components/ProposalForm/hooks.js"],"names":["module","exports","DatePickerField","name","placeholder","className","isRange","maxTimestamp","minTimestamp","error","tabIndex","useState","isOpen","setIsOpen","togglePicker","useCallback","setFieldValue","setFieldTouched","value","values","classNames","data-testid","show","lang","MONTHS_LABELS","onChange","year","month","day","onDismiss","styles","box","justify","align","noMargin","onClick","secondFormattedValue","firstFormattedValue","formatDateToInternationalString","formattedValue","type","errorMsg","active","defaultProps","readOnly","MDGuideTable","isDarkTheme","useTheme","themeName","DEFAULT_DARK_THEME_NAME","buildRow","label","content","tableContent","href","blockWrapper","quotedText","codeBlock","darkCodeBlock","data","wrapperClassName","table","bodyCellClassName","tableBodyCell","dark","headers","ModalMDGuide","title","onClose","props","contentStyle","width","titleStyle","paddingRight","DraftSaver","setValues","dirty","submitSuccess","mapBlobToFile","setTouched","getQueryStringValue","draftId","setDraftId","useDraftProposals","draftProposals","onDelete","onDeleteDraftProposal","onSave","onSaveDraftProposal","saving","setSaving","saved","setSaved","canSaveDraft","useEffect","setQueryStringValue","foundDraftProposal","files","description","rfpDeadline","rfpLink","startDate","endDate","amount","domain","replaceImgDigestByBlob","text","markdownFiles","newValues","filter","file","includes","kind","loading","replaceBlobsByDigestsAndGetFiles","newFiles","id","setTimeout","Wrapper","formikProps","proposalValidation","amountmin","amountmax","namesupportedchars","namelengthmax","namelengthmin","startdatemin","enddatemax","errors","isRFP","PROPOSAL_TYPE_RFP","PROPOSAL_TYPE_RFP_SUBMISSION","rfpLinkErrors","validateRfpSubmissionToken","nameErrors","validateProposalName","length","amountNumber","Number","replace","isNaN","usdFormatter","format","startdate","startdateTimestamp","enddateTimestamp","enddate","convertObjectToUnixTimestamp","minStartdateTimestamp","Math","round","Date","getTime","dateString","formatUnixTimestampToObj","maxEndDateTimestamp","match","invalidMessage","trim","CENSORSHIP_TOKEN_LENGTH","exactLengthMessage","nameRegex","buildRegexFromSupportedChars","minLengthMessage","maxLengthMessage","typeLabels","PROPOSAL_TYPE_REGULAR","domainLabels","development","research","marketing","design","FormatHelpButton","openMDGuideModal","weight","formatHelpButton","darkButton","SubmitButton","isSubmitting","disableSubmit","isValid","i","Map","ListItem","children","listItem","sumNowAndDuration","timestamp","now","Rules","target","rel","ProposalForm","React","memo","handleChange","handleSubmit","touched","isPublic","isInitialValid","validateForm","smallTablet","useMediaQuery","usePolicy","policyTicketVote","linkbyperiodmin","linkbyperiodmax","policyPi","domains","isRFPSubmission","handleDescriptionChange","v","typeOptions","useMemo","map","domainOptions","getProposalDomainOptionsForSelect","handleSelectFiledChange","fieldName","option","handleChangeWithTouched","field","e","handleFilesChange","concat","handleFileRemoval","fs","f","payload","filesInput","AttachFileInput","small","textAreaProps","hasError","global","useScrollTo","onSubmit","wrap","typeRow","typeRowNoMargin","SelectField","disabled","options","typeSelectWrapper","contentClassName","deadlineTooltip","tooltipWrapper","placement","iconWrapper","size","viewBox","height","rfpLinkToken","topMargin","onKeyUp","PROPOSAL_AMOUNT_UNIT","onFocus","onBlur","MarkdownEditor","allowImgs","onFileChange","onRemove","topMarginSize","errorRow","toString","withRouter","initialValues","history","useModalContext","handleOpenModal","handleCloseModal","openMdModal","openLoginModal","ModalLogin","onLoggedIn","setSubmitSuccess","onFetchProposalsBatchWithoutState","useAction","act","proposalFormValidation","policy","useProposalForm","resetForm","setSubmitting","setFieldError","others","PROPOSAL_STATE_VETTED","rfpWithVoteSummaries","proposals","summaries","proposal","shortRecordToken","voteSummary","Error","isActiveApprovedRfp","undefined","proposalToken","push","statusCode","newInitialValues","initialErrors","validate"],"mappings":"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","file":"static/js/ProposalForm.656f76e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionsWrapper\":\"ProposalForm_actionsWrapper__5VA7l\",\"darkButton\":\"ProposalForm_darkButton__Gqi9r\",\"formSelectError\":\"ProposalForm_formSelectError__YnvyW\",\"errorRow\":\"ProposalForm_errorRow__3O_qd\",\"errorMsg\":\"ProposalForm_errorMsg__FQgAm\",\"typeSelectWrapper\":\"ProposalForm_typeSelectWrapper__2DfUk\",\"typeRow\":\"ProposalForm_typeRow__1hYdx\",\"typeRowNoMargin\":\"ProposalForm_typeRowNoMargin__3rGRz\",\"rfpDeadline\":\"ProposalForm_rfpDeadline__2OA-x\",\"startDate\":\"ProposalForm_startDate__1lRBr\",\"endate\":\"ProposalForm_endate__1HmZn\",\"iconWrapper\":\"ProposalForm_iconWrapper__2xB3N\",\"deadlineTooltip\":\"ProposalForm_deadlineTooltip__8OVXB\",\"rfpLinkToken\":\"ProposalForm_rfpLinkToken__plJst\",\"formatHelpButton\":\"ProposalForm_formatHelpButton__2-25Y\",\"proposalGuidelinesButton\":\"ProposalForm_proposalGuidelinesButton__3cSl5 ProposalForm_formatHelpButton__2-25Y\",\"tooltipWrapper\":\"ProposalForm_tooltipWrapper__24TUk\",\"topMargin\":\"ProposalForm_topMargin__231iP\",\"listItem\":\"ProposalForm_listItem__29uaX\",\"datePicker\":\"ProposalForm_datePicker__3XZcq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"DatePickerField_box__17eJ2\",\"placeholder\":\"DatePickerField_placeholder__3EauD\",\"errorMsg\":\"DatePickerField_errorMsg__3XzLq\",\"active\":\"DatePickerField_active__33tk7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"ModalMDGuide_table__3Rngy\",\"blockWrapper\":\"ModalMDGuide_blockWrapper__lXY6e\",\"dark\":\"ModalMDGuide_dark__21gy-\",\"quotedText\":\"ModalMDGuide_quotedText__1mfD3\",\"codeBlock\":\"ModalMDGuide_codeBlock__3YtXt\",\"darkCodeBlock\":\"ModalMDGuide_darkCodeBlock__2DaLN\",\"tableBodyCell\":\"ModalMDGuide_tableBodyCell__3Sqzx\"};","import React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { classNames, DatePickerV2, Icon, Text } from \"pi-ui\";\nimport { FormikConsumer } from \"formik\";\nimport styles from \"./DatePickerField.module.css\";\nimport { Row } from \"../layout\";\nimport { MONTHS_LABELS } from \"src/constants\";\nimport { formatDateToInternationalString } from \"src/helpers\";\n\nconst DatePickerField = ({\n  name,\n  placeholder,\n  className,\n  isRange,\n  maxTimestamp,\n  minTimestamp,\n  error,\n  tabIndex\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const togglePicker = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n\n  return (\n    <FormikConsumer>\n      {({ setFieldValue, setFieldTouched, values }) => {\n        const onDateChange = ({ year, month, day }) => {\n          if (!!year && !!month && !!day) {\n            setFieldValue(name, { year, month, day });\n          }\n          setFieldTouched(name, true);\n          setIsOpen(false);\n        };\n\n        const value = values[name];\n\n        const onDismiss = () => {\n          if (isOpen) {\n            setFieldTouched(name, true);\n            setIsOpen(false);\n          }\n        };\n\n        const formattedValue = () => {\n          // If range mode is on, format both values and return as string.\n          if (isRange) {\n            let firstFormattedValue = \"\";\n            if (value[0]) {\n              firstFormattedValue = `${formatDateToInternationalString(\n                value[0]\n              )} - `;\n            }\n            let secondFormattedValue;\n            if (value[1]) {\n              secondFormattedValue = `${formatDateToInternationalString(\n                value[1]\n              )}`;\n            }\n            return `${firstFormattedValue}${secondFormattedValue}`;\n          }\n          // In single mode return the formatted picked date.\n          return formatDateToInternationalString(value);\n        };\n\n        return (\n          <div\n            className={classNames(\"cursor-pointer\", className)}\n            data-testid=\"datepicker\"\n          >\n            <DatePickerV2\n              tabIndex={tabIndex}\n              show={isOpen}\n              minTimestamp={minTimestamp}\n              maxTimestamp={maxTimestamp}\n              value={value}\n              lang={MONTHS_LABELS}\n              onChange={onDateChange}\n              onDismiss={onDismiss}\n            >\n              <Row\n                className={styles.box}\n                justify=\"space-between\"\n                align=\"center\"\n                noMargin\n                onClick={togglePicker}\n              >\n                {value && formattedValue()}\n                {!value && (\n                  <Text className={styles.placeholder}>{placeholder}</Text>\n                )}\n                <Icon type=\"calendar\" />\n              </Row>\n            </DatePickerV2>\n            <p className={classNames(styles.errorMsg, styles.active)}>\n              {error}\n            </p>\n          </div>\n        );\n      }}\n    </FormikConsumer>\n  );\n};\n\nDatePickerField.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  readOnly: PropTypes.bool,\n  className: PropTypes.string\n};\n\nDatePickerField.defaultProps = {\n  readOnly: false\n};\n\nexport default DatePickerField;\n","import React from \"react\";\nimport {\n  Modal,\n  P,\n  Table,\n  H1,\n  H2,\n  H3,\n  H4,\n  H5,\n  H6,\n  Link,\n  useTheme,\n  classNames,\n  DEFAULT_DARK_THEME_NAME\n} from \"pi-ui\";\nimport styles from \"./ModalMDGuide.module.css\";\n\nconst MDGuideTable = () => {\n  const { themeName } = useTheme();\n  const isDarkTheme = themeName === DEFAULT_DARK_THEME_NAME;\n  const buildRow = (label, content) => ({\n    \"You type\": label,\n    \"You see\": content\n  });\n  const tableContent = [\n    buildRow(\"# header1\", <H1>header1</H1>),\n    buildRow(\"## header2\", <H2>header2</H2>),\n    buildRow(\"### header3\", <H3>header3</H3>),\n    buildRow(\"#### header4\", <H4>header4</H4>),\n    buildRow(\"##### header5\", <H5>header5</H5>),\n    buildRow(\"###### header6\", <H6>header6</H6>),\n    buildRow(\"*italics*\", <i>italics</i>),\n    buildRow(\"**bold**\", <b>bold</b>),\n    buildRow(\"~~strikethrough~~\", <s>strikethrough</s>),\n    buildRow(\n      \"[decred!](https://decred.org)\",\n      <Link href=\"https://decred.org\">decred!</Link>\n    ),\n    buildRow(\n      <div>\n        *item1 <br /> *item2 <br /> *item3{\" \"}\n      </div>,\n      <ul>\n        <li>item1</li>\n        <li>item2</li>\n        <li>item3</li>\n      </ul>\n    ),\n    buildRow(\n      \"> quoted text\",\n      <div className={styles.blockWrapper}>\n        <blockquote className={styles.quotedText}>quoted text</blockquote>\n      </div>\n    ),\n    buildRow(\n      <div>\n        Lines starting with four spaces <br />\n        are treated like code: <br /> <br />\n        <span className=\"spaces\">    </span>if 1 * 3 != 3: <br />\n        <span className=\"spaces\">        </span>return false\n      </div>,\n      <div className={styles.blockWrapper}>\n        <pre\n          className={classNames(\n            styles.codeBlock,\n            isDarkTheme && styles.darkCodeBlock\n          )}\n        >\n          if 1 * 2 != 3:\n          <br />\n          return false\n        </pre>\n      </div>\n    )\n  ];\n  return (\n    <>\n      <P>\n        We use a slightly customized version from of Markdown for formatting.\n        See below for some basics.\n      </P>\n      <Table\n        data={tableContent}\n        wrapperClassName={styles.table}\n        bodyCellClassName={classNames(\n          styles.tableBodyCell,\n          \"markdown-body\",\n          isDarkTheme && styles.dark\n        )}\n        headers={[\"You type\", \"You see\"]}\n      />\n    </>\n  );\n};\n\nconst ModalMDGuide = ({ title = \"Formatting Help\", onClose, ...props }) => {\n  return (\n    <Modal\n      title={title}\n      onClose={onClose}\n      {...props}\n      contentStyle={{ width: \"100%\" }}\n      titleStyle={{ paddingRight: \"4rem\" }}\n    >\n      <MDGuideTable />\n    </Modal>\n  );\n};\n\nexport default ModalMDGuide;\n","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"pi-ui\";\nimport { FormikConsumer } from \"formik\";\nimport { useDraftProposals } from \"src/containers/Proposal/User/hooks\";\nimport { getQueryStringValue, setQueryStringValue } from \"src/lib/queryString\";\nimport {\n  replaceBlobsByDigestsAndGetFiles,\n  replaceImgDigestByBlob\n} from \"src/helpers\";\n\nconst DraftSaver = ({\n  values,\n  setValues,\n  dirty,\n  submitSuccess,\n  mapBlobToFile,\n  setTouched\n}) => {\n  const [draftId, setDraftId] = useState(getQueryStringValue(\"draft\"));\n  const {\n    draftProposals,\n    onDeleteDraftProposal: onDelete,\n    onSaveDraftProposal: onSave\n  } = useDraftProposals();\n  const [saving, setSaving] = useState(false);\n  const [saved, setSaved] = useState(false);\n\n  const canSaveDraft = values && !!values.name && !saved;\n\n  const executeFakeLoading = () => {\n    setSaving(true);\n    setTimeout(() => {\n      setSaved(true);\n      setSaving(false);\n    }, 300);\n  };\n\n  const handleSave = () => {\n    const { description, files } = replaceBlobsByDigestsAndGetFiles(\n      values.description,\n      mapBlobToFile\n    );\n    const newFiles = [...values.files, ...files];\n    const id = onSave({ draftId, ...values, files: newFiles, description });\n    // first time saving this draft\n    if (!draftId) {\n      setDraftId(id);\n    }\n    executeFakeLoading();\n  };\n\n  useEffect(\n    function updateURLForDraftID() {\n      if (draftId) {\n        setQueryStringValue(\"draft\", draftId);\n      }\n    },\n    [draftId]\n  );\n\n  useEffect(\n    function resetSaved() {\n      setSaved(false);\n    },\n    [values, setSaved]\n  );\n\n  useEffect(\n    function handleSubmitSuccess() {\n      if (submitSuccess && !!draftId) {\n        onDelete(draftId);\n      }\n    },\n    [submitSuccess, draftId, onDelete]\n  );\n\n  useEffect(\n    function handleInitializeFormFromDraft() {\n      const foundDraftProposal =\n        !!draftProposals && draftId && draftProposals[draftId];\n      if (foundDraftProposal && !dirty) {\n        const {\n          name,\n          files,\n          type,\n          description,\n          rfpDeadline,\n          rfpLink,\n          startDate,\n          endDate,\n          amount,\n          domain\n        } = foundDraftProposal;\n        const { text, markdownFiles } = replaceImgDigestByBlob(\n          { description, files },\n          mapBlobToFile\n        );\n        const filteredFiles = files.filter(\n          (file) => !markdownFiles.includes(file)\n        );\n        const newValues = {\n          name,\n          description: text,\n          files: filteredFiles,\n          type,\n          rfpDeadline,\n          rfpLink,\n          startDate,\n          endDate,\n          amount,\n          domain\n        };\n        setValues(newValues);\n        setTouched(newValues);\n      }\n    },\n    [draftProposals, dirty, draftId, setValues, mapBlobToFile, setTouched]\n  );\n  return (\n    <Button\n      type=\"button\"\n      kind={saving || !canSaveDraft ? \"disabled\" : \"secondary\"}\n      loading={saving}\n      onClick={handleSave}\n    >\n      {saved ? \"Saved ✓\" : \"Save Draft\"}\n    </Button>\n  );\n};\n\nconst Wrapper = (props) => {\n  return (\n    <FormikConsumer>\n      {(formikProps) => {\n        return <DraftSaver {...{ ...props, ...formikProps }} />;\n      }}\n    </FormikConsumer>\n  );\n};\n\nexport default Wrapper;\n","import {\n  buildRegexFromSupportedChars,\n  minLengthMessage,\n  maxLengthMessage,\n  exactLengthMessage,\n  invalidMessage\n} from \"src/utils/validation\";\nimport {\n  convertObjectToUnixTimestamp,\n  formatDateToInternationalString\n} from \"src/helpers\";\nimport {\n  PROPOSAL_TYPE_RFP,\n  PROPOSAL_TYPE_RFP_SUBMISSION,\n  CENSORSHIP_TOKEN_LENGTH\n} from \"src/constants\";\nimport { usdFormatter, formatUnixTimestampToObj } from \"src/utils\";\n\nexport const proposalValidation =\n  ({\n    amountmin,\n    amountmax,\n    namesupportedchars,\n    namelengthmax,\n    namelengthmin,\n    startdatemin,\n    enddatemax\n  }) =>\n  (values) => {\n    const errors = {};\n    if (!values) {\n      values = {\n        name: \"\",\n        amount: 0,\n        startDate: null,\n        endDate: null,\n        domain: \"\",\n        description: \"\",\n        type: null,\n        rfpLink: \"\",\n        rfpDeadline: null,\n        files: []\n      };\n    }\n\n    // type validation\n    if (!values.type) {\n      errors.type = \"Required\";\n    }\n\n    // RFP deadline validation\n    const isRFP = values.type === PROPOSAL_TYPE_RFP;\n    if (isRFP && !values.rfpDeadline) {\n      errors.rfpDeadline = \"Required\";\n    }\n\n    // RFP submission token validation\n    if (values.type === PROPOSAL_TYPE_RFP_SUBMISSION) {\n      const rfpLinkErrors = validateRfpSubmissionToken(values.rfpLink);\n      if (rfpLinkErrors) errors.rfpLink = rfpLinkErrors;\n    }\n\n    // name validation\n    const nameErrors = validateProposalName(\n      values.name,\n      namesupportedchars,\n      namelengthmin,\n      namelengthmax\n    );\n    if (nameErrors) errors.name = nameErrors;\n\n    // Validate amount, start & end dates only if not dealing with\n    // a RFP.\n    if (!isRFP) {\n      // amount validation\n      if (!values.amount || values.amount.length < 2) {\n        errors.amount = \"Required\";\n      } else {\n        // Valid amount is at least 2 chars long, as it includes the unit\n        // as the first char.\n        const amount = values.amount;\n        if (amount.length >= 2) {\n          const amountNumber = Number(amount.replace(/[^0-9.-]+/g, \"\"));\n          if (\n            isNaN(amountNumber) ||\n            amountNumber < amountmin / 100 ||\n            amountNumber > amountmax / 100\n          ) {\n            errors.amount = `Invalid amount, min is ${usdFormatter.format(\n              amountmin / 100\n            )}, max is ${usdFormatter.format(amountmax / 100)}`;\n          }\n        }\n      }\n\n      // start & end dates validations.\n      const startdate = values.startDate;\n      if (!startdate) {\n        errors.startDate = \"Please pick a start date\";\n      }\n      const enddate = values.endDate;\n      if (!enddate) {\n        errors.endDate = \"Please pick an end date\";\n      }\n\n      // Ensure start date is bigger than policy start date min.\n      let startdateTimestamp;\n      if (startdate) {\n        startdateTimestamp = convertObjectToUnixTimestamp(startdate, true);\n        const minStartdateTimestamp =\n          Math.round(new Date().getTime() / 1000) + startdatemin;\n        const dateString = formatDateToInternationalString(\n          formatUnixTimestampToObj(minStartdateTimestamp)\n        );\n        if (startdateTimestamp < minStartdateTimestamp) {\n          errors.startDate = `Minimum possible start date is: ${dateString}`;\n        }\n      }\n      // Ensure end date is smaller than policy end date min\n      let enddateTimestamp;\n      if (enddate) {\n        enddateTimestamp = convertObjectToUnixTimestamp(enddate);\n        const maxEndDateTimestamp =\n          Math.round(new Date().getTime() / 1000) + enddatemax;\n        const dateString = formatDateToInternationalString(\n          formatUnixTimestampToObj(maxEndDateTimestamp)\n        );\n        if (enddateTimestamp > maxEndDateTimestamp) {\n          errors.endDate = `Maximum possible end date is: ${dateString}`;\n        }\n      }\n\n      // If both start & end dates provided, ensure start\n      // date is smaller.\n      if (startdate && enddate) {\n        if (enddateTimestamp <= startdateTimestamp) {\n          errors.startDate = \"Start date must be before end date\";\n          errors.endDate = \"End date must be after start date\";\n        }\n      }\n    }\n\n    // domain validation\n    if (!values.domain) {\n      errors.domain = \"Required\";\n    }\n\n    // description validation\n    if (!values.description) {\n      errors.description = \"Required\";\n    }\n\n    return errors;\n  };\n\nconst validateRfpSubmissionToken = (rfpLink) => {\n  if (!rfpLink) {\n    return \"Required\";\n  }\n  const tokenRegex = /[^0-9a-f]/g;\n  if (rfpLink.match(tokenRegex)) {\n    return invalidMessage(\"Token\", [\"a-f\", \"0-9\"]);\n  }\n  if (rfpLink.trim().length !== CENSORSHIP_TOKEN_LENGTH) {\n    return exactLengthMessage(\"token\", CENSORSHIP_TOKEN_LENGTH);\n  }\n};\n\nconst validateProposalName = (\n  name,\n  namesupportedchars,\n  namelengthmin,\n  namelengthmax\n) => {\n  if (!name) {\n    return \"Required\";\n  }\n  const nameRegex = buildRegexFromSupportedChars(namesupportedchars);\n  if (!name.match(nameRegex)) {\n    return invalidMessage(\"name\", namesupportedchars);\n  }\n  if (name.trim().length < namelengthmin) {\n    return minLengthMessage(\"name\", namelengthmin);\n  }\n  if (name.trim().length > namelengthmax) {\n    return maxLengthMessage(\"name\", namelengthmax);\n  }\n};\n","import {\n  PROPOSAL_TYPE_REGULAR,\n  PROPOSAL_TYPE_RFP,\n  PROPOSAL_TYPE_RFP_SUBMISSION\n} from \"src/constants\";\nimport { formatUnixTimestampToObj } from \"src/utils\";\n\nconst typeLabels = {\n  [PROPOSAL_TYPE_REGULAR]: \"Regular proposal\",\n  [PROPOSAL_TYPE_RFP]: \"RFP proposal\",\n  [PROPOSAL_TYPE_RFP_SUBMISSION]: \"RFP submission\"\n};\n\nconst domainLabels = {\n  development: \"Development\",\n  research: \"Research\",\n  marketing: \"Marketing\",\n  design: \"Design\"\n};\n\n/**\n * Returns the available dates range as objects { min,max } for RFP linkby\n * using policy[ticketvote] provided values\n * @param {number} linkbyperiodmin min possible linkby period as seconds unix\n * @param {number} linkbyperiodmax max possible linkby period as seconds unix\n */\nexport const getRfpMinMaxDates = (linkbyperiodmin, linkbyperiodmax) => {\n  const currentTimeSec = new Date().getTime() / 1000;\n  return {\n    min: formatUnixTimestampToObj(currentTimeSec + Number(linkbyperiodmin)),\n    max: formatUnixTimestampToObj(currentTimeSec + Number(linkbyperiodmax))\n  };\n};\n\n/**\n * Returns the possible dates range as objects { min, max } for the\n * start-end dates range.\n */\nexport const getStartEndDatesRange = (startdatemin, enddatemax) => {\n  const currentTimeSec = new Date().getTime() / 1000;\n  return {\n    min: formatUnixTimestampToObj(currentTimeSec + Number(startdatemin)),\n    max: formatUnixTimestampToObj(currentTimeSec + Number(enddatemax))\n  };\n};\n\n/**\n * Returns the proposal type select options.\n * @returns {Array} sortSelectOptions\n */\nexport const getProposalTypeOptionsForSelect = () =>\n  [PROPOSAL_TYPE_REGULAR, PROPOSAL_TYPE_RFP, PROPOSAL_TYPE_RFP_SUBMISSION].map(\n    (value) => ({\n      label: typeLabels[value],\n      value\n    })\n  );\n\nexport const getProposalDomainOptionsForSelect = (domains) =>\n  domains.map((domain) => ({\n    label: domainLabels[domain],\n    value: domain\n  }));\n","import React from \"react\";\nimport { Text, classNames } from \"pi-ui\";\nimport styles from \"./ProposalForm.module.css\";\n\nconst FormatHelpButton = ({ isDarkTheme, openMDGuideModal }) => (\n  <Text\n    weight=\"semibold\"\n    className={classNames(\n      styles.formatHelpButton,\n      isDarkTheme && styles.darkButton\n    )}\n    onClick={openMDGuideModal}\n  >\n    Formatting Help\n  </Text>\n);\n\nexport default FormatHelpButton;\n","import React from \"react\";\nimport { Button } from \"pi-ui\";\n\nconst SubmitButton = ({ isSubmitting, disableSubmit, isValid }) => (\n  <Button\n    type=\"submit\"\n    kind={!isValid || disableSubmit ? \"disabled\" : \"primary\"}\n    loading={isSubmitting}\n  >\n    Submit\n  </Button>\n);\n\nexport default SubmitButton;\n","import React, { useState, useCallback, useMemo, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport {\n  Message,\n  BoxTextInput,\n  useMediaQuery,\n  useTheme,\n  Icon,\n  H3,\n  Link,\n  classNames,\n  Tooltip,\n  DEFAULT_DARK_THEME_NAME\n} from \"pi-ui\";\nimport { Row } from \"src/components/layout\";\nimport DatePickerField from \"../DatePickerField\";\nimport SelectField from \"src/components/Select/SelectField\";\nimport styles from \"./ProposalForm.module.css\";\nimport MarkdownEditor from \"src/components/MarkdownEditor\";\nimport ModalMDGuide from \"src/components/ModalMDGuide\";\nimport ModalLogin from \"src/components/ModalLogin\";\nimport ThumbnailGrid from \"src/components/Files\";\nimport AttachFileInput from \"src/components/AttachFileInput\";\nimport DraftSaver from \"./DraftSaver\";\nimport { useProposalForm } from \"./hooks\";\nimport usePolicy from \"src/hooks/api/usePolicy\";\nimport {\n  shortRecordToken,\n  replaceBlobsByDigestsAndGetFiles,\n  replaceImgDigestByBlob\n} from \"src/helpers\";\nimport {\n  PROPOSAL_TYPE_REGULAR,\n  PROPOSAL_TYPE_RFP,\n  PROPOSAL_TYPE_RFP_SUBMISSION,\n  PROPOSAL_STATE_VETTED,\n  PROPOSAL_AMOUNT_UNIT\n} from \"src/constants\";\nimport {\n  getProposalTypeOptionsForSelect,\n  getProposalDomainOptionsForSelect\n} from \"./helpers\";\nimport { convertObjectToUnixTimestamp } from \"src/helpers\";\nimport { isActiveApprovedRfp } from \"src/containers/Proposal/helpers\";\nimport useModalContext from \"src/hooks/utils/useModalContext\";\nimport useScrollTo from \"src/hooks/utils/useScrollTo\";\nimport FormatHelpButton from \"./FormatHelpButton\";\nimport SubmitButton from \"./SubmitButton\";\n\n/** The main goal of using a Map data structure instead of internal state\n * here is to prevent unnecessary rerenders. We just want a way to map blobs\n * to files objects. */\nconst mapBlobToFile = new Map();\n\nconst ListItem = ({ children }) => (\n  <li className={styles.listItem}>{children}</li>\n);\n\nfunction sumNowAndDuration(timestamp = 0) {\n  return Date.now() + timestamp * 1000;\n}\n\nconst Rules = () => (\n  <>\n    <H3>Rules:</H3>\n    <ul className=\"margin-top-s margin-bottom-m\">\n      <ListItem>\n        Expenses must be denominated in USD (but will be paid in DCR)\n      </ListItem>\n      <ListItem>\n        The work will be paid next month after the month it was done, as\n        explained{\" \"}\n        <Link\n          href=\"https://docs.decred.org/contributing/contributor-compensation/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          here\n        </Link>\n      </ListItem>\n      <ListItem>Proposal must include actionable plan</ListItem>\n      <ListItem>\n        Check{\" \"}\n        <Link\n          href=\"https://docs.decred.org/governance/politeia/proposal-guidelines/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Proposal Guidelines\n        </Link>\n      </ListItem>\n    </ul>\n  </>\n);\n\nconst ProposalForm = React.memo(function ProposalForm({\n  values,\n  handleChange,\n  handleSubmit,\n  isSubmitting,\n  setFieldValue,\n  setFieldTouched,\n  errors,\n  isValid,\n  touched,\n  submitSuccess,\n  disableSubmit,\n  openMDGuideModal,\n  isPublic,\n  isInitialValid,\n  validateForm\n}) {\n  // If initial values are not valid we run validateForm formik\n  // function to display errors.\n  //\n  // XXX when migrating to Formik v2.x we could use Formik's new props\n  // `initialErrors` && `initialTouched` instead of passing\n  // `isInitialValid` and then validating the form & setting the\n  // touched manually if it's false on mount.\n  useEffect(() => {\n    if (!isInitialValid) {\n      setFieldTouched(\"startDate\");\n      setFieldTouched(\"endDate\");\n      validateForm();\n    }\n  }, [isInitialValid, validateForm, setFieldTouched]);\n\n  const smallTablet = useMediaQuery(\"(max-width: 685px)\");\n  const { themeName } = useTheme();\n  const {\n    policyTicketVote: { linkbyperiodmin, linkbyperiodmax },\n    policyPi: { domains, enddatemax, startdatemin }\n  } = usePolicy();\n  const isDarkTheme = themeName === DEFAULT_DARK_THEME_NAME;\n  const isRFP = values.type === PROPOSAL_TYPE_RFP;\n  const isRFPSubmission = values.type === PROPOSAL_TYPE_RFP_SUBMISSION;\n\n  const handleDescriptionChange = useCallback(\n    (v) => {\n      setFieldValue(\"description\", v);\n    },\n    [setFieldValue]\n  );\n\n  const typeOptions = useMemo(() => getProposalTypeOptionsForSelect(), []);\n  const domainOptions = useMemo(\n    () => getProposalDomainOptionsForSelect(domains),\n    [domains]\n  );\n\n  const handleSelectFiledChange = useCallback(\n    (fieldName) => (option) => {\n      setFieldTouched(fieldName, true);\n      setFieldValue(fieldName, option.value);\n    },\n    [setFieldValue, setFieldTouched]\n  );\n\n  const handleChangeWithTouched = (field) => (e) => {\n    setFieldTouched(field, true);\n    handleChange(e);\n  };\n\n  const handleAmountKeyUp = ({ target }) => {\n    const value = target.value;\n    if (value.length > 0 && !value.includes(PROPOSAL_AMOUNT_UNIT)) {\n      setFieldValue(\"amount\", `${PROPOSAL_AMOUNT_UNIT}${value}`);\n    } else if (value === PROPOSAL_AMOUNT_UNIT) {\n      setFieldValue(\"amount\", \"\");\n    }\n  };\n\n  const handleAmountFocus = ({ target }) => {\n    const value = target.value;\n    if (value === \"\") {\n      setFieldValue(\"amount\", PROPOSAL_AMOUNT_UNIT);\n    }\n  };\n\n  const handleAmountBlur = () => {\n    setFieldTouched(\"amount\");\n  };\n\n  const handleFilesChange = useCallback(\n    (v) => {\n      const files = values.files.concat(v);\n      setFieldValue(\"files\", files);\n    },\n    [setFieldValue, values.files]\n  );\n\n  const handleFileRemoval = useCallback(\n    (v) => {\n      const fs = values.files.filter((f) => f.payload !== v.payload);\n      setFieldValue(\"files\", fs);\n    },\n    [setFieldValue, values.files]\n  );\n\n  const filesInput = useMemo(\n    () => <AttachFileInput small onChange={handleFilesChange} type=\"button\" />,\n    [handleFilesChange]\n  );\n\n  const textAreaProps = useMemo(() => ({ tabIndex: 2 }), []);\n\n  const hasError = errors && errors.global;\n  useScrollTo(\"record-submission-error-message\", hasError);\n\n  function getEndDateMinTimestamp() {\n    return values.startDate\n      ? // One day from startDate in ms\n        (convertObjectToUnixTimestamp(values.startDate) + 86400) * 1000\n      : sumNowAndDuration(startdatemin);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Message kind=\"warning\" className=\"margin-bottom-m\">\n        Drafts are saved locally to your browser and are not recoverable if\n        something goes wrong. We recommend drafting the content offline then\n        using the editor to submit the final version.\n      </Message>\n      <Row\n        noMargin\n        wrap={smallTablet}\n        className={classNames(\n          styles.typeRow,\n          isRFPSubmission && styles.typeRowNoMargin\n        )}\n      >\n        <SelectField\n          name=\"type\"\n          onChange={handleSelectFiledChange(\"type\")}\n          disabled={isPublic}\n          data-testid=\"proposal-type\"\n          options={typeOptions}\n          className={styles.typeSelectWrapper}\n        />\n        {isRFP && (\n          <>\n            <DatePickerField\n              className={styles.rfpDeadline}\n              name=\"rfpDeadline\"\n              placeholder=\"Deadline\"\n              tabIndex={1}\n              minTimestamp={sumNowAndDuration(linkbyperiodmin)}\n              maxTimestamp={sumNowAndDuration(linkbyperiodmax)}\n            />\n            <Tooltip\n              contentClassName={styles.deadlineTooltip}\n              className={styles.tooltipWrapper}\n              placement={smallTablet ? \"left\" : \"bottom\"}\n              content=\"The deadline for the RFP submissions,\n              it can be edited at any point before the voting has been started and should be at least two weeks from now.\"\n            >\n              <div className={styles.iconWrapper}>\n                <Icon type=\"info\" size={smallTablet ? \"md\" : \"lg\"} />\n              </div>\n            </Tooltip>\n          </>\n        )}\n        {isRFPSubmission && (\n          <>\n            {!smallTablet && (\n              <div className={styles.iconWrapper}>\n                <Icon\n                  type={\"horizontalLink\"}\n                  viewBox=\"0 0 24 16\"\n                  width={24}\n                  height={16}\n                />\n              </div>\n            )}\n            <BoxTextInput\n              placeholder=\"RFP token\"\n              name=\"rfpLink\"\n              tabIndex={1}\n              value={values.rfpLink}\n              disabled={isPublic}\n              onChange={handleChangeWithTouched(\"rfpLink\")}\n              className={classNames(\n                styles.rfpLinkToken,\n                smallTablet && styles.topMargin\n              )}\n              error={touched.rfpLink && errors.rfpLink}\n            />\n            <Tooltip\n              contentClassName={styles.deadlineTooltip}\n              className={styles.tooltipWrapper}\n              placement=\"left\"\n              content=\"The token for the RFP you are submitting on,\n              it can be found on the RFP proposal page.\"\n            >\n              <div className={styles.iconWrapper}>\n                <Icon type=\"info\" size={smallTablet ? \"md\" : \"lg\"} />\n              </div>\n            </Tooltip>\n          </>\n        )}\n      </Row>\n      <BoxTextInput\n        placeholder=\"Proposal name\"\n        name=\"name\"\n        data-testid=\"proposal-name\"\n        tabIndex={1}\n        value={values.name}\n        onChange={handleChangeWithTouched(\"name\")}\n        error={touched.name && errors.name}\n      />\n      {!isRFP && (\n        <>\n          <BoxTextInput\n            placeholder=\"Amount (USD)\"\n            name=\"amount\"\n            data-testid=\"proposal-amount\"\n            tabIndex={1}\n            value={values.amount}\n            onChange={handleChangeWithTouched(\"amount\")}\n            onKeyUp={handleAmountKeyUp}\n            onFocus={handleAmountFocus}\n            onBlur={handleAmountBlur}\n            error={touched.amount && errors.amount}\n          />\n          <DatePickerField\n            tabIndex={1}\n            className={classNames(styles.startDate, \"margin-bottom-m\")}\n            value={values.startDate}\n            name=\"startDate\"\n            placeholder=\"Start Date\"\n            minTimestamp={sumNowAndDuration(startdatemin)}\n            maxTimestamp={sumNowAndDuration(enddatemax)}\n            error={touched.startDate && errors.startDate}\n          />\n          <DatePickerField\n            tabIndex={1}\n            className={classNames(styles.endDate, \"margin-bottom-m\")}\n            value={values.endDate}\n            minTimestamp={getEndDateMinTimestamp()}\n            maxTimestamp={sumNowAndDuration(enddatemax)}\n            name=\"endDate\"\n            placeholder=\"End Date\"\n            error={touched.endDate && errors.endDate}\n          />\n        </>\n      )}\n      <SelectField\n        name=\"domain\"\n        id=\"proposal-domain-selector\"\n        onChange={handleSelectFiledChange(\"domain\")}\n        options={domainOptions}\n        className={classNames(styles.typeSelectWrapper, \"margin-top-m\")}\n        placeholder=\"Domain\"\n      />\n      <MarkdownEditor\n        allowImgs={true}\n        tabIndex={1}\n        name=\"description\"\n        className=\"margin-top-s\"\n        data-testid=\"text-area\"\n        value={values.description}\n        textAreaProps={textAreaProps}\n        onChange={handleDescriptionChange}\n        onFileChange={handleFilesChange}\n        placeholder=\"Write your proposal\"\n        error={touched.description && errors.description}\n        filesInput={filesInput}\n        mapBlobToFile={mapBlobToFile}\n      />\n      <ThumbnailGrid\n        value={values.files}\n        onRemove={handleFileRemoval}\n        errors={errors}\n      />\n      <Rules />\n      {!smallTablet ? (\n        <Row topMarginSize=\"s\" justify=\"right\">\n          <FormatHelpButton\n            isDarkTheme={isDarkTheme}\n            openMDGuideModal={openMDGuideModal}\n          />\n          <DraftSaver\n            mapBlobToFile={mapBlobToFile}\n            submitSuccess={submitSuccess}\n          />\n          <SubmitButton\n            isSubmitting={isSubmitting}\n            disableSubmit={disableSubmit}\n            isValid={isValid}\n          />\n        </Row>\n      ) : (\n        <>\n          <Row topMarginSize=\"s\" justify=\"right\">\n            <DraftSaver\n              mapBlobToFile={mapBlobToFile}\n              submitSuccess={submitSuccess}\n            />\n            <SubmitButton\n              isSubmitting={isSubmitting}\n              disableSubmit={disableSubmit}\n              isValid={isValid}\n            />\n          </Row>\n          <Row topMarginSize=\"s\" justify=\"right\">\n            <FormatHelpButton\n              isDarkTheme={isDarkTheme}\n              openMDGuideModal={openMDGuideModal}\n            />\n          </Row>\n        </>\n      )}\n      {hasError && (\n        <Row>\n          <Message\n            id=\"record-submission-error-message\"\n            className={classNames(styles.errorRow, \"margin-bottom-m\")}\n            kind=\"error\"\n          >\n            {errors.global.toString()}\n          </Message>\n        </Row>\n      )}\n    </form>\n  );\n});\n\nconst ProposalFormWrapper = ({\n  initialValues,\n  onSubmit,\n  disableSubmit,\n  history,\n  isPublic\n}) => {\n  const { text, markdownFiles } = replaceImgDigestByBlob(\n    initialValues,\n    mapBlobToFile\n  );\n  const [handleOpenModal, handleCloseModal] = useModalContext();\n  const openMdModal = useCallback(() => {\n    handleOpenModal(ModalMDGuide, {\n      onClose: handleCloseModal\n    });\n  }, [handleCloseModal, handleOpenModal]);\n  const openLoginModal = useCallback(() => {\n    handleOpenModal(ModalLogin, {\n      onLoggedIn: handleCloseModal,\n      onClose: handleCloseModal,\n      title: \"Your session has expired. Please log in again\"\n    });\n  }, [handleOpenModal, handleCloseModal]);\n  const [submitSuccess, setSubmitSuccess] = useState(false);\n  const { proposalFormValidation, onFetchProposalsBatchWithoutState } =\n    useProposalForm();\n  const handleSubmit = useCallback(\n    async (values, { resetForm, setSubmitting, setFieldError }) => {\n      try {\n        const {\n          type,\n          rfpLink,\n          rfpDeadline,\n          startDate,\n          endDate,\n          amount,\n          ...others\n        } = values;\n        // Parse string amount as it includes the unit.\n        const amountNumber = amount && Number(amount.replace(/[^0-9.-]+/g, \"\"));\n        if (type === PROPOSAL_TYPE_RFP_SUBMISSION) {\n          const rfpWithVoteSummaries = (await onFetchProposalsBatchWithoutState(\n            [rfpLink],\n            PROPOSAL_STATE_VETTED\n          )) || [[], null];\n          const [proposals, summaries] = rfpWithVoteSummaries;\n          const proposal = proposals[shortRecordToken(rfpLink)];\n          const voteSummary = summaries && summaries[rfpLink];\n          const isInvalidToken = !proposal || !voteSummary;\n          if (isInvalidToken) {\n            throw Error(\"Proposal not found!\");\n          }\n          if (!isPublic && !isActiveApprovedRfp(proposal, voteSummary)) {\n            throw Error(\n              \"Make sure token is associated with an approved & not expired RFP\"\n            );\n          }\n        }\n        const { description, files } = replaceBlobsByDigestsAndGetFiles(\n          others.description,\n          mapBlobToFile\n        );\n        const isRFP = type === PROPOSAL_TYPE_RFP;\n        const proposalToken = await onSubmit({\n          ...others,\n          description,\n          type,\n          files: [...others.files, ...files],\n          rfpLink,\n          rfpDeadline: isRFP\n            ? convertObjectToUnixTimestamp(rfpDeadline)\n            : undefined,\n          startDate: !isRFP\n            ? convertObjectToUnixTimestamp(startDate, true)\n            : undefined,\n          endDate: !isRFP ? convertObjectToUnixTimestamp(endDate) : undefined,\n          amount: !isRFP ? amountNumber : undefined\n        });\n        setSubmitting(false);\n        setSubmitSuccess(true);\n        // Navigate to record page.\n        history.push(`/record/${shortRecordToken(proposalToken)}`);\n        resetForm();\n      } catch (e) {\n        setSubmitting(false);\n        // Hardcode the login modal to show up when user session expires\n        // ref: https://github.com/decred/politeiagui/pull/2541#issuecomment-909194251\n        if (e.statusCode === 403) {\n          openLoginModal();\n        } else {\n          setFieldError(\"global\", e);\n        }\n      }\n    },\n    [\n      history,\n      onSubmit,\n      onFetchProposalsBatchWithoutState,\n      isPublic,\n      openLoginModal\n    ]\n  );\n\n  const newInitialValues = initialValues\n    ? {\n        ...initialValues,\n        description: text,\n        files:\n          initialValues &&\n          initialValues.files.filter((file) => !markdownFiles.includes(file))\n      }\n    : {\n        type: PROPOSAL_TYPE_REGULAR,\n        rfpDeadline: null,\n        rfpLink: \"\",\n        name: \"\",\n        description: \"\",\n        files: [],\n        amount: null,\n        startDate: null,\n        endDate: null,\n        domain: \"\"\n      };\n\n  const initialErrors =\n    initialValues && proposalFormValidation(newInitialValues);\n\n  return (\n    <>\n      <Formik\n        initialValues={newInitialValues}\n        loading={!proposalFormValidation}\n        validate={proposalFormValidation}\n        isInitialValid={!initialErrors}\n        onSubmit={handleSubmit}\n      >\n        {(props) => (\n          <ProposalForm\n            {...{\n              ...props,\n              submitSuccess,\n              disableSubmit,\n              openMDGuideModal: openMdModal,\n              newInitialValues,\n              isPublic,\n              isInitialValid: !initialErrors\n            }}\n          />\n        )}\n      </Formik>\n    </>\n  );\n};\n\nProposalFormWrapper.propTypes = {\n  initialValues: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  disableSubmit: PropTypes.bool\n};\n\nexport default withRouter(ProposalFormWrapper);\n","import usePolicy from \"src/hooks/api/usePolicy\";\nimport { useAction } from \"src/redux\";\nimport * as act from \"src/actions\";\nimport { proposalValidation } from \"./validation\";\n\nexport function useProposalForm() {\n  const { policyPi } = usePolicy();\n  const onFetchProposalsBatchWithoutState = useAction(\n    act.onFetchProposalsBatchWithoutState\n  );\n  return {\n    proposalFormValidation: policyPi && proposalValidation(policyPi),\n    onFetchProposalsBatchWithoutState,\n    policy: policyPi\n  };\n}\n"],"sourceRoot":""}